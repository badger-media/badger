name: Make Release

on:
  push:
    branches: [main]

permissions:
  contents: write
  deployments: write
  statuses: write

jobs:
  do-release:
    runs-on: ubuntu-latest
    if: (startsWith(github.event.head_commit.message, 'Release ') || startsWith(github.event.head_commit.message, 'Prerelease ')) && github.event.pusher.name == 'github-actions[bot]'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.head_commit.id }}

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "yarn"
          cache-dependency-path: "yarn.lock"

      - run: yarn install --immutable

      - name: Get version
        id: v
        # We assume that server and jobrunner are on the same version.
        run: echo version=$(yarn info --json bowser-desktop | jq -r '.children.Version') >> $GITHUB_OUTPUT
        working-directory: ./desktop

      - name: Create GH release
        run: |
          gh release create v${{ steps.v.outputs.version }} --draft ${{ startsWith(github.event.head_commit.message, 'Prerelease ') && '--prerelease' }} --target ${{ github.event.head_commit.id }} --generate-notes
        env:
          GH_TOKEN: ${{ github.token }}

    outputs:
      version: ${{ steps.v.outputs.version }}

  desktop-build:
    needs: [do-release]
    uses: ./.github/workflows/desktop-build.yml
    with:
      ref: v${{ github.event.head_commit.id }}
      prerelease: ${{ startsWith(github.event.head_commit.message, 'Prerelease ') }}
      do_release: true
    secrets: inherit

  publish-release:
    needs: [desktop-build, do-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v${{ github.event.head_commit.id }}
      - name: Publish release
        run: |
          gh release edit v${{ needs.do-release.outputs.version }} --draft=false
        env:
          GH_TOKEN: ${{ github.token }}
