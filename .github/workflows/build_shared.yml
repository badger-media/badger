on:
  workflow_call:
    inputs:
      ref:
        type: string
        required: true
        description: "Branch, tag, or commit to build."
      tag:
        type: string
        required: true
        description: Version to build, also the docker tag
      strip_rc:
        type: boolean
        description: Strip -rc suffix from version number
      push_docker:
        type: boolean
        default: true
        description: Push docker images to registry
      multi_arch:
        type: boolean
        default: false
        description: Build multi-arch docker images

permissions:
  contents: read
  packages: write

jobs:
  build-docker-server:
    runs-on: ubuntu-latest
    if: ${{ inputs.push_docker == true }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set version
        run: |
          set -x
          version=$(echo '${{ inputs.tag }}' | sed 's/^v//')
          if [[ '${{ inputs.strip_rc }}' == 'true' ]]; then
            version=$(echo $version | sed 's/-rc.*//')
          fi
          sed -i "s/0.0.0/$version/g" package.json
        working-directory: ./server
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/badger-media/badger/server
          flavor: latest=true
          tags: |
            type=raw,value=${{ inputs.tag }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.multi_arch && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GIT_REV=${{ github.sha }}
          file: Dockerfile.server

  build-docker-jobrunner:
    runs-on: ubuntu-latest
    if: ${{ inputs.push_docker == true }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set version
        run: |
          version=$(echo '${{ inputs.tag }}' | sed 's/^v//')
          if [[ '${{ inputs.strip_rc }}' == 'true' ]]; then
            version=$(echo $version | sed 's/-rc.*//')
          fi
          sed -i "s/0.0.0/$version/g" package.json
        working-directory: ./jobrunner
      - name: Docker metadata
        id: jr_meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/badger-media/badger/jobrunner
          flavor: latest=true
          tags: |
            type=raw,value=${{ inputs.tag }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.jr_meta.outputs.tags }}
          labels: ${{ steps.jr_meta.outputs.labels }}
          platforms: ${{ inputs.multi_arch && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GIT_REV=${{ github.sha }}
          file: Dockerfile.jobrunner
