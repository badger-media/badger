name: Run Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-unit-desktop:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
      - run: yarn install --immutable

      - run: yarn test --coverage
        working-directory: ./desktop

  test-unit-server:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
      - run: yarn install --immutable

      - run: yarn prisma:generate
        working-directory: ./server

      - run: yarn test --coverage
        working-directory: ./server

  test-integration-server:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.3
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: bowser_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
      - run: yarn install --immutable

      - run: yarn prisma migrate deploy && yarn prisma:generate
        working-directory: ./server
        env:
          DATABASE_URL: postgres://root:postgres@localhost:5432/bowser_test

      - run: yarn test:integration --coverage
        working-directory: ./server
        env:
            DATABASE_URL: postgres://root:postgres@localhost:5432/bowser_test

