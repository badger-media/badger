name: Run Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  prettier:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
      - run: yarn install --immutable --inline-builds

      - run: yarn prettier --check '{desktop,jobrunner,server}/**/*.{ts,tsx}'

  lint-desktop:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
      - run: yarn install --immutable --inline-builds

      - run: yarn lint
        working-directory: ./desktop

  lint-server:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
      - run: yarn install --immutable --inline-builds

      - run: yarn lint
        working-directory: ./server

  # TODO: jobrunner lint

  typecheck-desktop:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
      - run: yarn install --immutable --inline-builds

      - run: yarn typecheck
        working-directory: ./desktop

  typecheck-server:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
      - run: yarn install --immutable --inline-builds

      - run: yarn typecheck
        working-directory: ./server

  typecheck-jobrunner:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
      - run: yarn install --immutable --inline-builds

      - run: yarn typecheck
        working-directory: ./jobrunner

  test-unit-desktop:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
      - run: yarn install --immutable --inline-builds

      - run: yarn test --coverage
        working-directory: ./desktop

  test-unit-server:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
      - run: yarn install --immutable --inline-builds

      - run: yarn test --coverage
        working-directory: ./server

  test-integration-server-jobrunner:

    runs-on: ubuntu-latest

    env:
      DATABASE_URL: postgres://root:postgres@localhost:5432/bowser_test

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'

      - run: docker compose up -d

      - run: yarn install --immutable --inline-builds

      - run: yarn prisma:migrateProd

      - run: yarn test:integration

  test-e2e-server:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      E2E_TEST: 'true'
      DATABASE_URL: postgres://root:postgres@localhost:5432/bowser_test
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'

      - name: Start services
        run: docker compose up -d

      - name: Install dependencies
        run: yarn install --immutable --inline-builds

      - name: Build server
        run: |
          yarn build
          cp -r public .next/standalone/server/public
          mkdir -p .next/standalone/server/.next
          cp -r .next/static .next/standalone/server/.next/static
        working-directory: ./server

      - name: Build Jobrunner
        run: |
          yarn build
          cp ../utility/prisma/schema.prisma .
        working-directory: ./jobrunner

      # Adapted from https://playwrightsolutions.com/playwright-github-action-to-cache-the-browser-binaries/
      - name: Get installed Playwright version
        id: playwright-version
        run: echo version=$(yarn info --json @playwright/test | jq -r '.children.Version') >> $GITHUB_OUTPUT
        working-directory: ./server

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}

      - name: Install Playwright Browsers
        run: yarn playwright install --with-deps
        working-directory: ./server
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Install Playwright OS dependencies
        run: npx playwright install-deps
        if: steps.playwright-cache.outputs.cache-hit == 'true'

      - name: Migrate database
        run: yarn prisma:migrateProd

      - name: Start Jobrunner
        run: |
          node --enable-source-maps dist/index.cjs --watch --pidFile ${{ runner.temp }}/jobrunner.pid &
          npx -y wait-on file:/${{ runner.temp }}/jobrunner.pid
        working-directory: ./jobrunner

      - name: Run Playwright tests
        run: yarn playwright test
        working-directory: ./server
        env:
          PLAYWRIGHT_HTML_REPORT: ${{ github.workspace }}/server/playwright-report

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: ./server/playwright-report/
          retention-days: 30

  test-e2e-desktop:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      E2E_TEST: 'true'
      DATABASE_URL: postgres://root:postgres@localhost:5432/bowser_test
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'

      - name: Start services
        run: docker compose up -d

      - name: Install dependencies
        run: yarn install --immutable --inline-builds

      - name: Build server
        run: |
          yarn build
          cp -r public .next/standalone/server/public
          mkdir -p .next/standalone/server/.next
          cp -r .next/static .next/standalone/server/.next/static
        working-directory: ./server

      - name: Build Jobrunner
        run: |
          yarn build
          cp ../utility/prisma/schema.prisma .
        working-directory: ./jobrunner

      - name: Migrate database
        run: yarn prisma:migrateProd

      - name: Start Jobrunner
        run: |
          node --enable-source-maps dist/index.cjs --watch --pidFile ${{ runner.temp }}/jobrunner.pid &
          npx -y wait-on file:/${{ runner.temp }}/jobrunner.pid
        working-directory: ./jobrunner

      - name: Start server
        run: |
          node server/server.js &
          npx -y wait-on http://localhost:3000
        working-directory: ./server/.next/standalone

      - name: Run Playwright tests
        run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- yarn playwright test
        working-directory: ./desktop
        env:
          PLAYWRIGHT_HTML_REPORT: ${{ github.workspace }}/server/playwright-report

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: ./server/playwright-report/
          retention-days: 30

